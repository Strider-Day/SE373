<h1>Edit a Person</h1>
<p>{{message}}</p>

<form action="/update/{{searchedEmployee._id}}?_method=PUT" method="POST">
    <input type="hidden" id="_id" name="_method" value="PUT">
    <label for="firstName">First Name:</label>
    <input type="text" id="firstName" name="firstName" value="{{searchedEmployee.firstName}}" required>
    <br>
    <label for="lastName">Last Name:</label>
    <input type="text" id="lastName" name="lastName" value="{{searchedEmployee.lastName}}" required>
    <br>
    <label for="department">Department:</label>
    <select id="department" name="department" required>
        <option value="">Select a Department</option>
        <option value="Sales" {{#if (eq searchedEmployee.department "Sales")}}selected{{/if}}>Sales</option>
        <option value="HR" {{#if (eq searchedEmployee.department "HR")}}selected{{/if}}>HR</option>
        <option value="Manager" {{#if (eq searchedEmployee.department "Manager")}}selected{{/if}}>Manager</option>
        <option value="Storage" {{#if (eq searchedEmployee.department "Storage")}}selected{{/if}}>Storage</option>
    </select>
    <br>
    <label for="startDate">Start Date:</label>
    <input type="date" id="startDate" name="startDate" required>
    <br>
    <label for="jobTitle">Job Title:</label>
    <input type="text" id="jobTitle" name="jobTitle" value="{{searchedEmployee.jobTitle}}" required>
    <br>
    <label for="salary">Salary ($):</label>
    <input type="number" id="salary" name="salary" value="{{searchedEmployee.salary}}" min="0" required>
    <br>
    <button type="submit">Edit Employee</button>
    <a href="../view">Back to all employees</a>
</form>
<script>
    const urlParams = new URLSearchParams(window.location.search);
    const employeeId = urlParams.get("id");

    console.log(employeeId)

    async function fetchEmployee() {
        document.addEventListener("DOMContentLoaded", async function () {
        const urlParams = new URLSearchParams(window.location.search);
        const employeeId = urlParams.get("id");

        if (!employeeId) {
            alert("Invalid Employee ID!");
            window.location.href = "../view";
            return;
        }

        try {
            const response = await fetch(`/viewemployees/${employeeId}`);
            if (!response.ok) {
                throw new Error("Employee not found!");
            }

            const employee = await response.json();

            document.getElementById("employeeId").value = employee._id;
            document.getElementById("firstName").value = employee.firstName;
            document.getElementById("lastName").value = employee.lastName;
            document.getElementById("department").value = employee.department;
            if (employee.startDate) {
            const formattedDate = new Date(employee.startDate).toISOString().split("T")[0];
            document.getElementById("startDate").value = formattedDate;
            console.log("Formatted Start Date:", formattedDate); // âœ… Debugging Line
            }
            
            //document.getElementById("startDate").value = new Date(employee.startDate).toISOString().split("T")[0];
            document.getElementById("jobTitle").value = employee.jobTitle;
            document.getElementById("salary").value = employee.salary;
        } catch (error) {
            console.error("Error fetching employee:", error);
            alert("Failed to load employee data.");
            window.location.href = "../view";
        }
    });
    }
</script>